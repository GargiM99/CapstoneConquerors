{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ViewdescriptionComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ViewdescriptionComponent_div_21_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideServiceDescription());\n    });\n    i0.ɵɵtext(4, \"OK\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.selectedService.description);\n  }\n}\nexport class ViewdescriptionComponent {\n  constructor() {\n    this.numAdults = 0;\n    this.numChildren = 0;\n    this.services = [{\n      name: 'Service A',\n      description: 'Description of Service A'\n    }, {\n      name: 'Service B',\n      description: 'Description of Service B'\n    }, {\n      name: 'Service C',\n      description: 'Description of Service C'\n    }];\n    this.selectedService = {};\n    this.showDescription = false;\n  }\n  showServiceDescription(service) {\n    // Add logic here to customize the description based on user inputs\n    // For example, use the numAdults, numChildren, numDays, serviceType, and snackPreference properties\n    // to dynamically generate the description based on the selected service\n    this.selectedService = service;\n    this.showDescription = true;\n  }\n  hideServiceDescription() {\n    this.showDescription = false;\n  }\n}\nViewdescriptionComponent.ɵfac = function ViewdescriptionComponent_Factory(t) {\n  return new (t || ViewdescriptionComponent)();\n};\nViewdescriptionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewdescriptionComponent,\n  selectors: [[\"app-viewdescription\"]],\n  decls: 22,\n  vars: 6,\n  consts: [[\"for\", \"numAdults\"], [\"type\", \"number\", \"id\", \"numAdults\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"numChildren\"], [\"type\", \"number\", \"id\", \"numChildren\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"numDays\"], [\"type\", \"number\", \"id\", \"numDays\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"serviceType\"], [\"id\", \"serviceType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"full-service\"], [\"value\", \"quick-service\"], [\"for\", \"snackPreference\"], [\"type\", \"text\", \"id\", \"snackPreference\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"fas\", \"fa-info-circle\"], [\"class\", \"service-description\", 4, \"ngIf\"], [1, \"service-description\"]],\n  template: function ViewdescriptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\", 0);\n      i0.ɵɵtext(1, \"Number of Adults:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewdescriptionComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.numAdults = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"label\", 2);\n      i0.ɵɵtext(4, \"Number of Children:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewdescriptionComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.numChildren = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Number of Days:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewdescriptionComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.numDays = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Service Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewdescriptionComponent_Template_select_ngModelChange_11_listener($event) {\n        return ctx.serviceType = $event;\n      });\n      i0.ɵɵelementStart(12, \"option\", 8);\n      i0.ɵɵtext(13, \"Full Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"option\", 9);\n      i0.ɵɵtext(15, \"Quick Service\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Snack Preference:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ViewdescriptionComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.snackPreference = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function ViewdescriptionComponent_Template_button_click_19_listener() {\n        return ctx.showServiceDescription(ctx.service);\n      });\n      i0.ɵɵelement(20, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, ViewdescriptionComponent_div_21_Template, 5, 1, \"div\", 14);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.numAdults);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.numChildren);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.numDays);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.serviceType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.snackPreference);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.showDescription);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAqBAA,+BAAyD;IACpDA,YAA+B;IAAAA,iBAAI;IACtCA,kCAA2C;IAAnCA;MAAAA;MAAA;MAAA,OAASA,8CAAwB;IAAA,EAAC;IAACA,kBAAE;IAAAA,iBAAS;;;;IADnDA,eAA+B;IAA/BA,wDAA+B;;;ACfpC,OAAM,MAAOC,wBAAwB;EALrCC;IAOE,cAAS,GAAS,CAAC;IACnB,gBAAW,GAAS,CAAC;IAIrB,aAAQ,GAAG,CACT;MAAEC,IAAI,EAAE,WAAW;MAAEC,WAAW,EAAE;IAA0B,CAAE,EAC9D;MAAED,IAAI,EAAE,WAAW;MAAEC,WAAW,EAAE;IAA0B,CAAE,EAC9D;MAAED,IAAI,EAAE,WAAW;MAAEC,WAAW,EAAE;IAA0B,CAAE,CAC/D;IACD,oBAAe,GAAG,EAAE;IACpB,oBAAe,GAAG,KAAK;;EAEvBC,sBAAsB,CAACC,OAAO;IAC5B;IACA;IACA;IACA,IAAI,CAACC,eAAe,GAAGD,OAAO;IAC9B,IAAI,CAACE,eAAe,GAAG,IAAI;EAC7B;EAEAC,sBAAsB;IACpB,IAAI,CAACD,eAAe,GAAG,KAAK;EAC9B;;AAzBWP,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDNrCd,gCAAuB;MAAAA,iCAAiB;MAAAA,iBAAQ;MAChDA,gCAA4D;MAAxBA;QAAA;MAAA,EAAuB;MAA3DA,iBAA4D;MAC5DA,gCAAyB;MAAAA,mCAAmB;MAAAA,iBAAQ;MACpDA,gCAAgE;MAA1BA;QAAA;MAAA,EAAyB;MAA/DA,iBAAgE;MAChEA,gCAAqB;MAAAA,+BAAe;MAAAA,iBAAQ;MAC5CA,gCAAwD;MAAtBA;QAAA;MAAA,EAAqB;MAAvDA,iBAAwD;MACxDA,gCAAyB;MAAAA,8BAAa;MAAAA,iBAAQ;MAC9CA,kCAAmD;MAA1BA;QAAA;MAAA,EAAyB;MAChDA,kCAA6B;MAAAA,6BAAY;MAAAA,iBAAS;MAClDA,kCAA8B;MAAAA,8BAAa;MAAAA,iBAAS;MAEtDA,kCAA6B;MAAAA,kCAAiB;MAAAA,iBAAQ;MACtDA,kCAAsE;MAA9BA;QAAA;MAAA,EAA6B;MAArEA,iBAAsE;MAGtEA,mCAAkD;MAA1CA;QAAA,OAASe,uCAA+B;MAAA,EAAC;MAC/Cf,yBAAkC;MACpCA,iBAAS;MAGTA,4EAGM;;;MAtB8BA,eAAuB;MAAvBA,uCAAuB;MAErBA,eAAyB;MAAzBA,yCAAyB;MAE7BA,eAAqB;MAArBA,qCAAqB;MAE9BA,eAAyB;MAAzBA,yCAAyB;MAKVA,eAA6B;MAA7BA,6CAA6B;MAQnCA,eAAqB;MAArBA,0CAAqB","names":["i0","ViewdescriptionComponent","constructor","name","description","showServiceDescription","service","selectedService","showDescription","hideServiceDescription","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\zunai\\viewDescription\\src\\app\\viewdescription\\viewdescription.component.html","C:\\Users\\zunai\\viewDescription\\src\\app\\viewdescription\\viewdescription.component.ts"],"sourcesContent":["<!-- Inputs for number of adults, children, days, service type, and snack preference -->\n<label for=\"numAdults\">Number of Adults:</label>\n<input type=\"number\" id=\"numAdults\" [(ngModel)]=\"numAdults\">\n<label for=\"numChildren\">Number of Children:</label>\n<input type=\"number\" id=\"numChildren\" [(ngModel)]=\"numChildren\">\n<label for=\"numDays\">Number of Days:</label>\n<input type=\"number\" id=\"numDays\" [(ngModel)]=\"numDays\">\n<label for=\"serviceType\">Service Type:</label>\n<select id=\"serviceType\" [(ngModel)]=\"serviceType\">\n  <option value=\"full-service\">Full Service</option>\n  <option value=\"quick-service\">Quick Service</option>\n</select>\n<label for=\"snackPreference\">Snack Preference:</label>\n<input type=\"text\" id=\"snackPreference\" [(ngModel)]=\"snackPreference\">\n\n<!-- Button with info icon -->\n<button (click)=\"showServiceDescription(service)\">\n  <i class=\"fas fa-info-circle\"></i>\n</button>\n\n<!-- Service description message box -->\n<div class=\"service-description\" *ngIf=\"showDescription\">\n  <p>{{selectedService.description}}</p>\n  <button (click)=\"hideServiceDescription()\">OK</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-viewdescription',\n  templateUrl: './viewdescription.component.html',\n  styleUrls: ['./viewdescription.component.css']\n})\nexport class ViewdescriptionComponent {\n\n  numAdults: number=0;\n  numChildren: number=0;\n  numDays: number;\n  serviceType: string;\n  snackPreference: string;\n  services = [\n    { name: 'Service A', description: 'Description of Service A' },\n    { name: 'Service B', description: 'Description of Service B' },\n    { name: 'Service C', description: 'Description of Service C' }\n  ];\n  selectedService = {};\n  showDescription = false;\n\n  showServiceDescription(service) {\n    // Add logic here to customize the description based on user inputs\n    // For example, use the numAdults, numChildren, numDays, serviceType, and snackPreference properties\n    // to dynamically generate the description based on the selected service\n    this.selectedService = service;\n    this.showDescription = true;\n  }\n\n  hideServiceDescription() {\n    this.showDescription = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}