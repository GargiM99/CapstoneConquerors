{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MealService {\n  constructor() {\n    this.adultsError = '';\n    this.childrenError = '';\n    this.daysError = '';\n    this.FulldaysPerServiceError = '';\n    this.QuickdaysPerServiceError = '';\n  }\n  calculateMealPrice(adults, children, days, _FulldaysPerService, _QuickdaysPerService, snacksPreference) {\n    // Validate user input\n    if (adults <= 0) {\n      this.adultsError = 'Invalid input';\n    } else {\n      this.adultsError = '';\n    }\n    if (children <= 0) {\n      this.childrenError = 'Invalid input';\n    } else {\n      this.childrenError = '';\n    }\n    if (days <= 0) {\n      this.daysError = 'Invalid input';\n    } else {\n      this.daysError = '';\n    }\n    if (_FulldaysPerService <= 0) {\n      this.FulldaysPerServiceError = 'Invalid input';\n    } else {\n      this.FulldaysPerServiceError = '';\n    }\n    if (_QuickdaysPerService <= 0) {\n      this.QuickdaysPerServiceError = 'Invalid input';\n    } else {\n      this.QuickdaysPerServiceError = '';\n    }\n    if (this.adultsError || this.childrenError || this.daysError || this.FulldaysPerServiceError || this.QuickdaysPerServiceError) {\n      return 0;\n    }\n    // Perform calculation\n    const fullPrice = 20;\n    const quickPrice = 15;\n    /*  const fullDays = Math.ceil(days / _FulldaysPerService);\r\n      const quickDays = Math.ceil(days / _QuickdaysPerService);\r\n      totalPrice += fullDays * fullPrice * (adults + children);\r\n      totalPrice += quickDays * quickPrice * (adults + children);\r\n              return totalPrice;*/\n    // Calculate the average meal price per person per day\n    const mealsPerDay = adults + children;\n    const mealPricePerDay = 10; // Sample value\n    const mealPricePerPersonPerDay = mealPricePerDay / mealsPerDay;\n    // Calculate the price of snacks\n    const snackPricePerDay = snacksPreference ? 5 : 0;\n    // Calculate the total price\n    const totalPricePerDay = mealPricePerPersonPerDay + snackPricePerDay;\n    const totalPrice = totalPricePerDay * days * (_FulldaysPerService + _QuickdaysPerService);\n    return totalPrice;\n  }\n}\nMealService.ɵfac = function MealService_Factory(t) {\n  return new (t || MealService)();\n};\nMealService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MealService,\n  factory: MealService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC;IAIE,gBAAW,GAAS,EAAE;IACtB,kBAAa,GAAS,EAAE;IACxB,cAAS,GAAS,EAAE;IACpB,4BAAuB,GAAS,EAAE;IAClC,6BAAwB,GAAS,EAAE;;EAEnCC,kBAAkB,CAACC,MAAc,EAAEC,QAAgB,EAAEC,IAAY,EAAEC,mBAA2B,EAACC,oBAA2B,EAAEC,gBAAyB;IACnJ;IACA,IAAIL,MAAM,IAAI,CAAC,EAAE;MACf,IAAI,CAACM,WAAW,GAAG,eAAe;KACnC,MAAM;MACL,IAAI,CAACA,WAAW,GAAG,EAAE;;IAEvB,IAAIL,QAAQ,IAAI,CAAC,EAAE;MACjB,IAAI,CAACM,aAAa,GAAG,eAAe;KACrC,MAAM;MACL,IAAI,CAACA,aAAa,GAAG,EAAE;;IAEzB,IAAIL,IAAI,IAAI,CAAC,EAAE;MACb,IAAI,CAACM,SAAS,GAAG,eAAe;KACjC,MAAM;MACL,IAAI,CAACA,SAAS,GAAG,EAAE;;IAGrB,IAAIL,mBAAmB,IAAI,CAAC,EAAG;MAC7B,IAAI,CAACM,uBAAuB,GAAG,eAAe;KAC/C,MAAM;MACL,IAAI,CAACA,uBAAuB,GAAG,EAAE;;IAEnC,IAAIL,oBAAoB,IAAI,CAAC,EAAE;MAC7B,IAAI,CAACM,wBAAwB,GAAG,eAAe;KAChD,MAAM;MACL,IAAI,CAACA,wBAAwB,GAAG,EAAE;;IAGpC,IAAI,IAAI,CAACJ,WAAW,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,CAACC,uBAAuB,IAAI,IAAI,CAACC,wBAAwB,EAAE;MAC7H,OAAO,CAAC;;IAGV;IACA,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,UAAU,GAAG,EAAE;IAIvB;;;;;IAME;IACA,MAAMC,WAAW,GAAGb,MAAM,GAAGC,QAAQ;IACrC,MAAMa,eAAe,GAAG,EAAE,CAAC,CAAC;IAC5B,MAAMC,wBAAwB,GAAGD,eAAe,GAAGD,WAAW;IAE9D;IACA,MAAMG,gBAAgB,GAAGX,gBAAgB,GAAG,CAAC,GAAG,CAAC;IAEjD;IACA,MAAMY,gBAAgB,GAAGF,wBAAwB,GAAGC,gBAAgB;IACpE,MAAME,UAAU,GAAGD,gBAAgB,GAAGf,IAAI,IAAIC,mBAAmB,GAACC,oBAAoB,CAAC;IAEvF,OAAOc,UAAU;EACnB;;AAjEWrB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["MealService","constructor","calculateMealPrice","adults","children","days","_FulldaysPerService","_QuickdaysPerService","snacksPreference","adultsError","childrenError","daysError","FulldaysPerServiceError","QuickdaysPerServiceError","fullPrice","quickPrice","mealsPerDay","mealPricePerDay","mealPricePerPersonPerDay","snackPricePerDay","totalPricePerDay","totalPrice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\zunai\\Documents\\Capston Conquerors\\TripleTMangementSystem\\Development\\TripleTManagementSystem\\MealCalApp\\src\\app\\meal-cal\\meal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MealService {\r\n  adultsError: string='';\r\n  childrenError: string='';\r\n  daysError: string='';\r\n  FulldaysPerServiceError: string='';\r\n  QuickdaysPerServiceError: string='';\r\n\r\n  calculateMealPrice(adults: number, children: number, days: number, _FulldaysPerService: number,_QuickdaysPerService:number, snacksPreference: boolean): number {\r\n    // Validate user input\r\n    if (adults <= 0) {\r\n      this.adultsError = 'Invalid input';\r\n    } else {\r\n      this.adultsError = '';\r\n    }\r\n    if (children <= 0) {\r\n      this.childrenError = 'Invalid input';\r\n    } else {\r\n      this.childrenError = '';\r\n    }\r\n    if (days <= 0) {\r\n      this.daysError = 'Invalid input';\r\n    } else {\r\n      this.daysError = '';\r\n    }\r\n\r\n    if (_FulldaysPerService <= 0 ) {\r\n      this.FulldaysPerServiceError = 'Invalid input';\r\n    } else {\r\n      this.FulldaysPerServiceError = '';\r\n    }\r\n    if (_QuickdaysPerService <= 0) {\r\n      this.QuickdaysPerServiceError = 'Invalid input';\r\n    } else {\r\n      this.QuickdaysPerServiceError = '';\r\n    }\r\n\r\n    if (this.adultsError || this.childrenError || this.daysError || this.FulldaysPerServiceError || this.QuickdaysPerServiceError) {\r\n      return 0;\r\n    }\r\n\r\n    // Perform calculation\r\n    const fullPrice = 20;\r\n    const quickPrice = 15;\r\n\r\n\r\n\r\n  /*  const fullDays = Math.ceil(days / _FulldaysPerService);\r\n    const quickDays = Math.ceil(days / _QuickdaysPerService);\r\n    totalPrice += fullDays * fullPrice * (adults + children);\r\n    totalPrice += quickDays * quickPrice * (adults + children);\r\n\r\n    return totalPrice;*/\r\n    // Calculate the average meal price per person per day\r\n    const mealsPerDay = adults + children;\r\n    const mealPricePerDay = 10; // Sample value\r\n    const mealPricePerPersonPerDay = mealPricePerDay / mealsPerDay;\r\n\r\n    // Calculate the price of snacks\r\n    const snackPricePerDay = snacksPreference ? 5 : 0;\r\n\r\n    // Calculate the total price\r\n    const totalPricePerDay = mealPricePerPersonPerDay + snackPricePerDay;\r\n    const totalPrice = totalPricePerDay * days * (_FulldaysPerService+_QuickdaysPerService);\r\n\r\n    return totalPrice;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}